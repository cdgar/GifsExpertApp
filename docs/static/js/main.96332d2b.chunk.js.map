{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","width","height","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","i","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"iNA+BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAuBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAdc,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,a,+BCP/CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KACDC,EAAMD,EAAKE,KAAI,SAACC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCWLO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,qBAAKc,UAAU,4CAAf,SACI,qBAAKC,MAAM,MAAMC,OAAO,MAAMC,IAAKjB,EAAKkB,IAAKR,OCqB1CS,EAtBC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEd,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAACC,GAEHC,YAAW,WAEPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGd,UAEZ,CAACtB,IAEGuB,EDnByBM,CAAa7B,GAAhCa,EAAb,EAAON,KAAce,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAKtB,IACJ,mBAAGgB,UAAYM,EAAuD,KAA7C,4CAAzB,qBACD,qBAAKN,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACqB,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAEnB,aEWpBoB,EAvBM,WAEjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAEA,OACI,qCACI,+CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ+C,EAAWvB,KAAI,SAACf,GAAD,OACX,cAAC,EAAD,CAEIM,SAAUN,GADLA,YCX3BuC,EAAUC,SAASC,eAAe,QAExCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.96332d2b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()        \r\n        if (inputValue.trim().length > 2){\r\n            setCategories((c) => ([inputValue,...c]))\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=esni5sGWXdIrldNyN0GvLFTa3AJr26sS&q=${encodeURI(category)}&limit=10`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    const gif = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gif;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__headShake\">\r\n            <img width=\"200\" height=\"100\" src={url} alt={title}/>\r\n            {/* <p>{title}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {<p className={!loading ? 'animate__animated animate__bounceOutRight': null}>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((i) => (\r\n                        <GifGridItem \r\n                            key={i.id} \r\n                            {...i}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then((imgs) => {\r\n\r\n                setTimeout(() => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n                }, 500);\r\n        })\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState }  from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch'])\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp!</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories}/>            \r\n            <ol>\r\n                {\r\n                    categories.map((c) => (\r\n                        <GifGrid \r\n                            key={c} \r\n                            category={c}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nconst divRoot = document.getElementById('root')\r\n\r\nReactDOM.render(<GifExpertApp />, divRoot);\r\n"],"sourceRoot":""}